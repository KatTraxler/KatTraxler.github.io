<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
	<channel>
		<title>Cloud Conversations - with Kat Traxler - Articles</title>
		<description>A blog containing cloud research focusing in GCP, AWS and identity architecture</description>
		<link>http://localhost:4000</link>
		<atom:link href="http://localhost:4000/feed.articles.xml" rel="self" type="application/rss+xml" />
		
			
			<item>
				<title>GCP IAM 101 Series</title>
				<description>&lt;p&gt;The GCP IAM 101 series is intended to give a brief, succinct overview of essential Google Cloud authorization concepts, answering questions like ‘How does Alice gain access to the Bucket?’ These pages provide the MVK (Minimal Viable Knowledge) for Google Cloud IAM, supplemented with links to official, more verbose Google documentation where needed.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;2020-12-01-gcp-resource-hierarchy-101.markdown&quot;&gt;GCP Resource Hierarchy&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;2020-12-01-gcp-iam-policy-101.markdown&quot;&gt;GCP IAM Policy&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;2020-12-25-gcp-roles-permissions-101.markdown&quot;&gt;GCP Roles and Permissions&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;2020-12-05-gcp-users-groups-101.markdown&quot;&gt;GCP Users and Groups&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;2020-12-02-gcp-service-accounts-101.markdown&quot;&gt;GCP Service Accounts&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
				<pubDate>Sun, 03 Mar 2024 00:00:00 -0600</pubDate>
				<link>http://localhost:4000/gcp/iam/101/2024/03/03/gcp-series-101.html</link>
				<guid isPermaLink="true">http://localhost:4000/gcp/iam/101/2024/03/03/gcp-series-101.html</guid>
			</item>
			
		
			
			<item>
				<title>Attacks as a Service with The DeRF</title>
				<description>&lt;p&gt;Leverage The DeRF for attacker simulations, validating security controls or enhancing cloud detection capabilities.&lt;/p&gt;

&lt;p&gt;DeRF (Detection Replay Framework) is an “Attacks As A Service” framework, allowing the emulation of offensive techniques and generation of repeatable detection samples in the cloud. Built on Google Workflows&lt;/p&gt;

&lt;p&gt;The DeRF is open-source tool available on &lt;a href=&quot;https://github.com/vectra-ai-research/derf&quot;&gt;GitHub&lt;/a&gt;, consisting of Terraform modules and a Cloud Run application. Within this package, a variety of built-in attack techniques are provided, focusing on AWS and GCP. The DeRF is shipped with attack technique parity with Stratus Red Team to help eliminate the need for operators to choose tooling-based attack capabilities.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Read the release announcement in the &lt;a href=&quot;https://www.vectra.ai/blogpost/introducing-the-derf-detection-replay-framework-in-github&quot;&gt;Vectra AI Research&lt;/a&gt; space.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Read the &lt;a href=&quot;https://thederf.cloud&quot;&gt;Full Documentation&lt;/a&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Slide deck from Cloud Village talk can be found &lt;a href=&quot;https://github.com/vectra-ai-research/derf/blob/main/IntroducingTheDeRF.pdf&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

</description>
				<pubDate>Wed, 09 Aug 2023 00:00:00 -0500</pubDate>
				<link>http://localhost:4000/cloud/tooling/2023/08/09/attacks-as-a-service-with-the-derf.html</link>
				<guid isPermaLink="true">http://localhost:4000/cloud/tooling/2023/08/09/attacks-as-a-service-with-the-derf.html</guid>
			</item>
			
		
			
			<item>
				<title>Rethinking Your Threat Models for the Cloud</title>
				<description>&lt;p&gt;The cloud scrambled context for defenders who are accustomed to leaning on their understanding  of traditional on-prem architecture&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;In this &lt;a href=&quot;https://www.vectra.ai/blogpost/rethinking-your-threat-models-for-the-cloud&quot;&gt;post&lt;/a&gt; I aim to clarify the unique approaches needed to defend cloud systems by discussing the architecture underpinning the cloud, the resulting threat model, and finally, how attackers abuse such systems.&lt;/p&gt;

&lt;p&gt;The discussion begins with a brief overview of traditional on-premises architecture, highlighting the vulnerable points that attackers typically target. This is followed by an examination of the architecture provided by your cloud service provider (CSP). Next, I delve into the fundamentals of cloud architecture, exploring the new threat model that emerges as a result. This leads to an exploration of the tactics attackers employ to infiltrate cloud-deployed resources.&lt;/p&gt;

&lt;p&gt;To conclude, once we establish the unique aspects of cloud environments, I emphasize a cloud-native approach that attackers use to exploit vulnerabilities. I also discuss how defenders should prioritize visibility within the cloud environment.&lt;/p&gt;

</description>
				<pubDate>Wed, 03 May 2023 00:00:00 -0500</pubDate>
				<link>http://localhost:4000/misc/cloud/research/2023/05/03/rethinking-your-threatmodels.html</link>
				<guid isPermaLink="true">http://localhost:4000/misc/cloud/research/2023/05/03/rethinking-your-threatmodels.html</guid>
			</item>
			
		
			
			<item>
				<title>LastPass Breach: The Pyramid of Pain Perspective</title>
				<description>&lt;p&gt;Mining LastPass communications for new cloud IOCs&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;In this blog published in the &lt;a href=&quot;https://www.vectra.ai/blogpost/lastpass-breach-the-pyramid-of-pain-perspective&quot;&gt;Vectra AI Research&lt;/a&gt; space, each piece of LastPass communications is dissected for new pieces of intel and indicators are evaluated against the pyramind of pain model.&lt;/p&gt;

&lt;p&gt;In my evaluation of publicly available intel, I follow closely the advice given by author of the Pyramid of Pain, David Bianco’s “Whenever you receive new intel on an adversary (whether it be APT1/Comment Crew or any other threat actor), review it carefully against the Pyramid of Pain. For every paragraph, ask yourself ‘Is there anything here I can use to detect the adversary’s activity, and where does this fall on the pyramid?’”&lt;/p&gt;

</description>
				<pubDate>Tue, 14 Mar 2023 00:00:00 -0500</pubDate>
				<link>http://localhost:4000/misc/cloud/research/2023/03/14/lastpass-breach-pyramid-of-pain.html</link>
				<guid isPermaLink="true">http://localhost:4000/misc/cloud/research/2023/03/14/lastpass-breach-pyramid-of-pain.html</guid>
			</item>
			
		
			
			<item>
				<title>Abusing the Replicator: Silently Exfiltrating Data with the AWS S3 Replication Service</title>
				<description>&lt;p&gt;But how would you distinguish between legitimate backup activity and malicious data exfiltration on AWS S3?&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;In this &lt;a href=&quot;https://www.vectra.ai/blogpost/abusing-the-replicator-silently-exfiltrating-data-with-the-aws-s3-replication-service&quot;&gt;blog post&lt;/a&gt;, I walkthrough a malicious use of the S3 Replication service and how selective data event logging on the S3 service will result in a gap in S3 exfiltration visibility since the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PutObject&lt;/code&gt; event, indicating data movement event will not be written in the Source Account.&lt;/p&gt;

</description>
				<pubDate>Wed, 20 Jul 2022 00:00:00 -0500</pubDate>
				<link>http://localhost:4000/aws/cloud/research/2022/07/20/aws-abusing-the-replicator-s3-replication.html</link>
				<guid isPermaLink="true">http://localhost:4000/aws/cloud/research/2022/07/20/aws-abusing-the-replicator-s3-replication.html</guid>
			</item>
			
		
			
			<item>
				<title>Log4J’s Unique Impact In The Cloud</title>
				<description>&lt;p&gt;&lt;strong&gt;How to exploit the Log4J software vulnerability in cloud-hosted VMs for maximum impact&lt;/strong&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Want to understand how the Log4J vulnerability uniquely impacts cloud environments?  &lt;br /&gt;
Read my blog hosted in the &lt;a href=&quot;https://www.vectra.ai/blogpost/log4j-unique-impact-in-the-cloud&quot;&gt;Vectra AI Research&lt;/a&gt; site for details on how the Log4J vulnerability is exploited and why responders need to take addition measures to rotate credentials when vulnerable code is deployed on cloud-hosted VMs.&lt;/p&gt;

&lt;p&gt;As ANadditional resources, refer to my &lt;a href=&quot;https://github.com/vectra-ai-research/log4j-aws-sandbox&quot;&gt;Github Repo&lt;/a&gt; which includes a terraform deployment for a log4J testing sandbox complete with vulnerable application and JNDI Exploit Server.&lt;/p&gt;

</description>
				<pubDate>Mon, 20 Dec 2021 00:00:00 -0600</pubDate>
				<link>http://localhost:4000/misc/cloud/research/2021/12/20/log4j-in-cloud-environments.html</link>
				<guid isPermaLink="true">http://localhost:4000/misc/cloud/research/2021/12/20/log4j-in-cloud-environments.html</guid>
			</item>
			
		
			
			<item>
				<title>GCP AI Notebooks Vulnerability - Remediation</title>
				<description>&lt;p&gt;This is an update to my &lt;a href=&quot;https://kattraxler.github.io/gcp/hacking/2021/09/10/gcp-org-policy-bypass-ai-notebooks.html&quot;&gt;previous blog post&lt;/a&gt; which documented a  mechanism for GCP Org Policy Bypass using custom metadata on compute instances.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;The Original Issue&lt;/strong&gt;&lt;br /&gt;
Google makes use of the custom metadata in compute instances to authorize access to AI Notebooks and their web UIs.&lt;br /&gt;
Individuals granted access via custom metadata need not have any IAM permissions on the compute instance, on the service account running the Notebook or even be a member of the Organization.  Authorization via custom metadata, bypasses a specific &lt;a href=&quot;https://cloud.google.com/resource-manager/docs/organization-policy/restricting-domains&quot;&gt;&lt;strong&gt;Organization Policy Constraint&lt;/strong&gt;&lt;/a&gt; which is intended to restrict cross-domain resource sharing.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Googles Notification To Customers&lt;/strong&gt;&lt;br /&gt;
On September 9th, Google sent a notification to customers informing them of a ‘Security Enhancement’ being made to the AI Notebooks API.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/remediation-notification-1.png&quot; alt=&quot;Notification-1&quot; /&gt;
&lt;img src=&quot;/assets/images/remediation-notification-2.png&quot; alt=&quot;Notification-2&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;ins&gt;Highlights of the notification include:&lt;/ins&gt;&lt;br /&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;AI Notebooks will require a user who is granted access to a Notebook in Single-User Mode to have the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;iam.serviceAccounts.actAs&lt;/code&gt; permission on the Service Account the Notebook Instance is running as.&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;Indicates the fix will be retroactive. Meaning, if any access is currently being granted without the user having the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;iam.serviceAccounts.actAs&lt;/code&gt; permission, this change will actively break their access.&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;Provided a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;gcloud&lt;/code&gt; command for customers to search compute instances for ones using metadata as an authorization mechanism.&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;Date for roll-out to be Friday, September 10th 2021.&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Is the Original Issue Remediated?&lt;/strong&gt;&lt;br /&gt;
Finally, yes&lt;br /&gt;
While the engineers at Google pushed a patch for this issue on September 10th, they did not invalidate a persistent auth cookie set by the &lt;a href=&quot;us-west1.datalab.cloud.google.com/_signin?authuser=0&quot;&gt;Datalab signin endpoint&lt;/a&gt;.&lt;br /&gt;
With a valid ‘DATALAB_TUNNEL_TOKEN’ cookie, an end user is not redirected through the authentication flow (and through the patched piece of code) rather, they are fast tracked to the ‘/lab?authuser=0’ endpoint where they are authorized to access the Jupyter Notebook, again, irrespective of IAM Role assignment.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Is there any lingering risk?&lt;/strong&gt;&lt;br /&gt;
I don’t believe so.&lt;br /&gt;&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;The initial fix Google rolled out on Friday, September 10th seemed to address all active connections through the Inverting Proxy.&lt;br /&gt; A forcible re-registeration process was performed that had the affect of actively terminating access to notebooks if the user in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;proxy-user-mail&lt;/code&gt; custom metadata field DID NOT have the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;iam.serviceAccounts.actAs&lt;/code&gt; permission. &lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;The ‘DATALAB_TUNNEL_TOKEN’ cookie has a TTL of 24 hours and the expiration appears to be enforced server side. It has been more than 24 since the Datalab Signin enpoint would have issued a ‘DATALAB_TUNNEL_TOKEN’ cookie to a user who does not have the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;iam.serviceAccounts.actAs&lt;/code&gt; permission&lt;br /&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Lessons Learned&lt;/strong&gt;&lt;br /&gt;&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;It’s never good when two people are performing seemingly the same test and come up with different results.&lt;/li&gt;
  &lt;li&gt;Invalidate persistent auth cookies when patching auth bypass issues.&lt;/li&gt;
  &lt;li&gt;If you release details of insufficiently mitigated vulnerability in a major cloud provider on a Friday night, expect to be working the weekend.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Shout Outs&lt;/strong&gt;&lt;br /&gt;
Special thanks to the Google Engineers that partnered with me over the weekend to figure out what was going on.&lt;br /&gt;
And to the friends who let me complain to them.&lt;/p&gt;
</description>
				<pubDate>Sat, 11 Sep 2021 00:00:00 -0500</pubDate>
				<link>http://localhost:4000/gcp/hacking/2021/09/11/gcp-ai-notebooks-vulnerability-remediation-update-copy.html</link>
				<guid isPermaLink="true">http://localhost:4000/gcp/hacking/2021/09/11/gcp-ai-notebooks-vulnerability-remediation-update-copy.html</guid>
			</item>
			
		
			
			<item>
				<title>Bypassing GCP Org Policy with Custom Metadata</title>
				<description>&lt;p&gt;&lt;strong&gt;TLDR;&lt;/strong&gt;&lt;br /&gt;
Google makes use of custom metadata to authorize access to AI Notebooks and their web UIs.&lt;br /&gt;
Individuals granted access via custom metadata need not have any IAM permissions on the compute instance, on the service account running the Notebook or even be a member of the Organization.  Authorization via custom metadata, bypasses a specific &lt;a href=&quot;https://cloud.google.com/resource-manager/docs/organization-policy/restricting-domains&quot;&gt;&lt;strong&gt;Organization Policy Constraint&lt;/strong&gt;&lt;/a&gt; which restricts cross-domain resource sharing.&lt;br /&gt;
This vulnerability was awarded $1337.00 by the Google VRP Review Panel.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What Are AI Notebooks?&lt;/strong&gt;&lt;br /&gt;
AI Notebooks are Google Clouds’ offering for managed Jupyter Notebooks.  The underlying infrastructure for AI Notebooks are Compute instances that live as resources in a customers Project.  Create an AI Notebook, a Compute instance will be spun up in the background to support it.&lt;/p&gt;

&lt;p&gt;The AI Notebooks API serves as an abstraction layer on top of the GCP Compute API.  The same ML optimized, deep learning VM can be created with the Compute APIs as it can with the Notebooks APIs, albeit with more friction and fuss.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The Jupyter Notebooks Web Interface&lt;/strong&gt;&lt;br /&gt;
The value proposition of several Google Products including AI Notebooks is their automagically generated web interfaces. These PaaS Services register instances with Googles &lt;a href=&quot;https://github.com/google/inverting-proxy&quot;&gt;&lt;strong&gt;Inverting Proxy&lt;/strong&gt;&lt;/a&gt; to expose a GUI for the the underlying compute instance. 
Chances are, it you are interacting with content served from the domain &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;googleusercontent.com&lt;/code&gt;, it is being served through the &lt;a href=&quot;https://github.com/google/inverting-proxy&quot;&gt;&lt;strong&gt;Inverting Proxy&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The Vulnerability&lt;/strong&gt;&lt;br /&gt;
AI Notebooks, when deployed in Single-User Mode includes the following metadata tag: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;proxy-user-mail&lt;/code&gt;
The value of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;proxy-user-mail&lt;/code&gt; indicates to the &lt;a href=&quot;https://github.com/google/inverting-proxy&quot;&gt;&lt;strong&gt;Inverting Proxy&lt;/strong&gt;&lt;/a&gt;, who is authorized to access the Jupyter Notebook UI.&lt;/p&gt;

&lt;p&gt;Upon the creation of a Jupyter Notebook, the Notebooks API checks if the user specified in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;proxy-user-mail&lt;/code&gt; metadata property has the ‘Service Account User’ Role on the Service Account serving as the identity for the AI Notebook Instance. By performing this check, the AI Notebooks code ensures Notebooks in Single-User Mode can only be used to grant access to users which are assigned minimally assigned the &lt;a href=&quot;https://cloud.google.com/iam/docs/service-accounts-actas&quot;&gt;&lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;iam.serviceAccounts.actAs&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt; permission on the Compute Instance Service Account.&lt;/p&gt;

&lt;p&gt;Unfortunately, this check was only performed at the time of Notebook creation, when it is initially registered with the &lt;a href=&quot;https://github.com/google/inverting-proxy&quot;&gt;&lt;strong&gt;Inverting Proxy&lt;/strong&gt;&lt;/a&gt;.&lt;br /&gt;
However,  &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;proxy-user-mail&lt;/code&gt; metadata property can be changed AFTER the initial creation of the AI Notebook.
By Stopping and Restarting the AI Notebook Instance, one could force the notebook instance to re-register with the Inverting Proxy.&lt;br /&gt;
When re-registering, the Notebooks API &lt;strong&gt;does not check&lt;/strong&gt; if the user specified in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;proxy-user-mail&lt;/code&gt; metadata property has the &lt;a href=&quot;https://cloud.google.com/iam/docs/service-accounts#user-role&quot;&gt;Service Account User Role&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/backdoored-VM.png&quot; alt=&quot;Backdoored VM&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Bypassing Org Policy&lt;/strong&gt;&lt;br /&gt;
As showcased in the demo, this vulnerability ‘bypassed’ the Org Policy Constraint: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;iam.allowedPolicyMemberDomains&lt;/code&gt;.&lt;br /&gt;
This Org Policy allows administrators to constrain what members can have IAM Policy in a GCP Organization. A common way to leverage this Org Policy is a company would restrict who is eligible to have access to resouces to only members in their domain.&lt;br /&gt;
i.e., only user with ‘@companyX.com’ email addresses would be allowed to be granted acess to resourcess.&lt;br /&gt;
The fine-print on this, and all Organization Policy constraints are, they only affect IAM Policy.  When access control is defined by some other mechanisms, all bets are off.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The Demo&lt;/strong&gt;&lt;br /&gt;&lt;/p&gt;
&lt;p allign=&quot;center&quot;&gt;
&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/RgSsQpCoj_w&quot; title=&quot;YouTube video player&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Identifying If You Were Affected&lt;/strong&gt;&lt;br /&gt;
Their does not seem to be any ongoing risk with this issue as outlined in my follow up report detailing &lt;a href=&quot;https://kattraxler.github.io/gcp/hacking/2021/09/11/gcp-ai-notebooks-vulnerability-remediation-update.html&quot;&gt;rememdiation&lt;/a&gt;.
The remaining interesting question for GCP Customers is?,&lt;br /&gt; “Were you affected? At somepoint, was an attacker using this vulnerability as a backdoor”&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;To answer that question I suggest querying your Cloud Audit Logs and reviewing any &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;setMetadata&lt;/code&gt; events.  If any &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;setMetadata&lt;/code&gt; events set the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;proxy-user-mail&lt;/code&gt; metadata property to a user outside your domain, this should be pursued as suspicious.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;gcloud logging read &quot;resource.type=gce_instance AND logName:projects/[PROJECT-ID]/logs/cloudaudit.googleapis.com%2Factivity&quot;  --format json
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Reporting Timeline&lt;/strong&gt;&lt;br /&gt;
	– 05/15/21: Originally reported this issue via the &lt;a href=&quot;https://www.google.com/about/appsecurity/reward-program/&quot;&gt;&lt;strong&gt;Google Vulnerability Rewards Program&lt;/strong&gt;&lt;/a&gt; from corporate email address.&lt;br /&gt;
	– June 2021: Was verbally informed the fix would roll out first week in July.&lt;br /&gt;
	– July 2021: Lost access to original report as it was submitted using corporate email address and I changed jobs :) &lt;br /&gt;
	– 07/27/2021: Re-reported the same issue via the &lt;a href=&quot;https://www.google.com/about/appsecurity/reward-program/&quot;&gt;&lt;strong&gt;Google Vulnerability Rewards Program&lt;/strong&gt;&lt;/a&gt;, this time with personal email account. Assigned ticket number: 194849420 &lt;br /&gt;
	– 07/28/2021: Identified as an Abuse Risk and triaged to the Google Trust &amp;amp; Safety team. Categorized as a Priority P1, Severity S4.&lt;br /&gt;
	– 7/29/2021: Google VRP communicated that the fix was rolled out that week.&lt;br /&gt;
	– 7/29/2021: I informed Google that their fix was insufficient and AI Notebooks and the Inverting Proxy was still vulnerable.&lt;br /&gt;
	– 08/05/2021: Provided further details on how this issue bypassed the Domain Restriction Constraint and confirmed that I knew that the Domain Restriction Constraint is NOT retroactive and that quirk of Organization Policy was not relevant.&lt;br /&gt;
	– 08/09/2021: From Google VRP: “:Thanks for your report and sharing all the extra details - 🎉 Nice catch! I’ve connected with the product team and they confirmed that the issue you described is different from the issue you reported to us in May.”&lt;br /&gt;
	– 08/09/2021: I disagree.  The  AI Notebooks and the Inverting Proxy issue I reported in May is the same as I reported in July. But whatever.&lt;br /&gt;
	– 08/11/2021: Given an estimate of 3 weeks to fix.&lt;br /&gt;
	– 08/11/2021: Accepted the 3 week timeline and informed Google VRP I would disclose on September 10th.&lt;br /&gt;
	– 08/22/2021: Google VRP thanked me for my flexibility.&lt;br /&gt;
	– 08/19/2021: Informed of the Bug Bounty Award. “The VRP panel has decided to issue a reward of $1337.00 for your report. Congratulations”&lt;br /&gt;
	– 09/09/2021: Asked for an update as the issue remained open and reconfirmed my intensions to publish on September 10th.&lt;br /&gt;
	– 09/10/2021: Google VRP informed me the patch was being pushed to servers today and would be rolled out to all servers by EOD.&lt;br /&gt;
	– 09/10/2021: Informed Google VRP of the publishing of this report, despite the issue not being resolved.&lt;br /&gt;
	– 09/11/2021: Informed Google that I agreed their patch plus the expiration of the ‘DATALAB_TUNNEL_TOKEN’ cookie resulted in a complete fix of the issue.&lt;/p&gt;

</description>
				<pubDate>Fri, 10 Sep 2021 00:00:00 -0500</pubDate>
				<link>http://localhost:4000/gcp/hacking/2021/09/10/gcp-org-policy-bypass-ai-notebooks.html</link>
				<guid isPermaLink="true">http://localhost:4000/gcp/hacking/2021/09/10/gcp-org-policy-bypass-ai-notebooks.html</guid>
			</item>
			
		
			
			<item>
				<title>GCP .actAs d-day &gt; How not to remediate</title>
				<description>&lt;p&gt;On January 27, 2021 a major, potentially breaking change is coming to GCP.  If you’re using the default service account as the backing identity for several of GCP’s data science PaaS services, the end user will be required to have the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.actAs&lt;/code&gt; permission on the default service account.&lt;/p&gt;

&lt;p&gt;The PaaS services in question are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Cloud Composer&lt;/li&gt;
  &lt;li&gt;Dataflow&lt;/li&gt;
  &lt;li&gt;Dataproc&lt;/li&gt;
  &lt;li&gt;Dataprep&lt;/li&gt;
  &lt;li&gt;Data Fusion&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Big deal right ?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Well, if you’re running these services with the default service account as their underlying identities &lt;strong&gt;and&lt;/strong&gt; your end users &lt;strong&gt;do not&lt;/strong&gt; have the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.actAs&lt;/code&gt; permission on that default service account, January 28 will be a no-good-rotten-day for operations.&lt;/p&gt;

&lt;p&gt;Google PSO published a tool, the &lt;a href=&quot;https://github.com/GoogleCloudPlatform/professional-services/tree/master/tools/permission-discrepancy-finder&quot;&gt;permission-dependency-finder&lt;/a&gt; which can help identify these conditions in your &lt;em&gt;projects&lt;/em&gt;. Google will have also notified the contact for your &lt;em&gt;organization&lt;/em&gt; if this insecure condition exists in any of your &lt;em&gt;projects&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What is the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.actAs&lt;/code&gt; permission ?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;When an end user has access to some infrastructure, most notably, a &lt;em&gt;compute instance&lt;/em&gt;,  it follows that they have unauthenticated access to its metadata API and the service account its running as. Naturally, giving an end user access to a service account, its access token and all of its roles and permissions could be a privilege escalation risk.  Therefore, when we need to enable an end user to operate a resource,  we want to be &lt;u&gt;explict.&lt;/u&gt;  That’s where the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.actAs&lt;/code&gt; permission comes in.&lt;/p&gt;

&lt;p&gt;The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.actAs&lt;/code&gt; permission can be thought of as a gatekeeper permission.  It’s a check against IAM which can authorize or deny access to a service account. It &lt;strong&gt;should&lt;/strong&gt; be required whenever the possibility exists for an end user to gain access to the metadata API. Accessing the metadata API can be accomplished directly say by SSH-ing into a &lt;em&gt;compute instance&lt;/em&gt; or indirectly, by controling code which the instance executes.&lt;/p&gt;

&lt;p&gt;When you assign a service account to a &lt;em&gt;compute instance&lt;/em&gt;, Google requires the end user to have the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.actAs&lt;/code&gt; permission on that service account.  When an end user creates a new Cloud Function, they need the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.actAs&lt;/code&gt; permission on the service account running that Cloud Function.&lt;/p&gt;

&lt;p&gt;The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.actAs&lt;/code&gt; permission is included in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Service Account User&lt;/code&gt; role and is a mechanism for us, the Cloud Adminstrators, a chance to be crystal clear about who can and who cannot access the roles and permissions assigned to a service account.&lt;/p&gt;

&lt;p&gt;On the other side of the orderly, perdicable requirement for the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.actAs&lt;/code&gt; permission, there is the class of GCP PaaS products which, inexplicably, did not require the end user to have the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.actAs&lt;/code&gt; permission on their service accounts ?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;History&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;It’s not necessary to dive overly deep into the back story.  The history of the missing &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.actAs&lt;/code&gt; permission check was effectively narrated by Dylan Ayrey in his blog post &lt;a href=&quot;https://security.love/blog/gcp/2020/11/22/lateral-movement-and-privesc-in-GCP.html&quot;&gt;Fixing a Google Vulnerability&lt;/a&gt;.  Allison Donovan and Dylan Ayrey, were the first to report this issue to Google in early 2019 as a security vulnerability.  Together, they worked with Google on helping them understand the security considerations they were not……considering.&lt;/p&gt;

&lt;p&gt;While 2019 was the year Dylan and Allison began working with Google, seemingly, holding their hand down a path through the ‘coming-to-jesus’ forest; 2020 was the year for this issue to be aired in public. First, the duo presented at &lt;a href=&quot;https://www.youtube.com/watch?v=z5hPU3g2aZ8&quot;&gt;BSides San Francisco&lt;/a&gt; with a talk entitled, “Security Considerations for the metadata API in GCP”.  The associated &lt;a href=&quot;https://github.com/dxa4481/AttackingAndDefendingTheGCPMetadataAPI&quot;&gt;blog post&lt;/a&gt; is another great archive for understanding how attacks on the metadata API can fuel a GCP &lt;em&gt;project&lt;/em&gt; takeover.&lt;/p&gt;

&lt;p&gt;In 2020 I gave three talks that highligted related security issues on the platform, &lt;a href=&quot;https://www.sans.org/webcasts/privilege-escalation-gcp-transitive-path-114705&quot;&gt;Privilege Escalation in GCP - A Transitive Path&lt;/a&gt; which is an academic look on using customer-managed service accounts as a lateral movovement path in a GCP &lt;em&gt;project&lt;/em&gt;, &lt;a href=&quot;https://www.youtube.com/watch?v=YGT_AmCA-eA&quot;&gt;GCP Primitive Roles, An indictment&lt;/a&gt; at &lt;a href=&quot;https://fwdcloudsec.org/index.html#intro&quot;&gt;fwd:CloudSec&lt;/a&gt;, I dug into the most dangerous of permissions included in GCP &lt;em&gt;Primitive Roles&lt;/em&gt;, with the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.actAs&lt;/code&gt; permission being a primary concern. And finally, &lt;a href=&quot;https://www.youtube.com/watch?v=I7QWQmS2Mpg&quot;&gt;A Bug Hunters Guide To GCP&lt;/a&gt; at the SANS Cloud &amp;amp; DevOps Security Summit.&lt;/p&gt;

&lt;p&gt;Last but not least, Spence Geizten, formerly of Rhino Security and of AWS Pacu fame, has a well researched &lt;a href=&quot;https://rhinosecuritylabs.com/gcp/privilege-escalation-google-cloud-platform-part-1/&quot;&gt;piece&lt;/a&gt; outlining specifc privilege escalation paths with the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.actAs&lt;/code&gt; permission and services not requiring the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.actAs&lt;/code&gt; permission.&lt;/p&gt;

&lt;p&gt;Finally, in July 2020, Google sent a notification to impacted customers informing them that the certain data science related PaaS products have ‘legacy behavior’ which allowed the end user to use them without the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.actAs&lt;/code&gt; permission and that behavior was to change on January 27 2021.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;January 27, 2021&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Despite my best Googling, I cannot find any public notice from Google committing to the January 27, 2021 date although it has been widely reported by customers. You might ask your GCP Org Admin if they received an emailed notice from Google near the end of July informing them of the upcoming changes.&lt;/p&gt;

&lt;p&gt;Since the notice to customers was issued, there is only one piece of public &lt;a href=&quot;https://cloud.google.com/iam/docs/service-accounts-actas&quot;&gt;GCP documentation&lt;/a&gt; regarding this issue.&lt;/p&gt;

&lt;p&gt;Layered in doublespeak, the page can be head scratching to parse.  Here are to two headlines:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Certain PaaS services did not require the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.actAs&lt;/code&gt; permission on the service account to operate (Composer, AppEngine, Dataflow, Dataproc, Data Fusion).  Going forward, when a product-level role is assigned to an end user, they will additionally need the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.actAs&lt;/code&gt; permission to really use the intended functionality.  That is, to attach service accounts to the inderlying &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;compute instances&lt;/code&gt;, a required procedure when spinning up a new service.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;End users who are &lt;strong&gt;currently&lt;/strong&gt; assigned roles allowing for the deployment of AppEngine applications, Composer environments or Dataflow jobs with the default service account &lt;u&gt;still are not&lt;/u&gt; required to have the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.actAs&lt;/code&gt; permission on the default service account.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This will change on January 27, 2021.&lt;/p&gt;

&lt;p&gt;At last, the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.actAs&lt;/code&gt; permission will be required, even when using the default &lt;em&gt;compute&lt;/em&gt; or default &lt;em&gt;AppEngine&lt;/em&gt; service accounts as the backing identity.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;How NOT to remediate&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Google provides a predefined role called &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;iam.serviceAccountUser&lt;/code&gt; which contains the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.actAs&lt;/code&gt; permission. If you were to bind this role at the &lt;em&gt;project&lt;/em&gt; level, you would be granting the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.actAs&lt;/code&gt; permission for all service accounts, current and future.&lt;/p&gt;

&lt;p&gt;Do not bind the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.actAs&lt;/code&gt; permission at the &lt;em&gt;project&lt;/em&gt; level.  If this is how an &lt;em&gt;organization&lt;/em&gt; addresses the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.actAs&lt;/code&gt; breaking change,  they might end up with a worse security posture.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;How to remediate&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Google PSO published a nifty tool called the &lt;a href=&quot;https://github.com/GoogleCloudPlatform/professional-services/tree/master/tools/permission-discrepancy-finder&quot;&gt;&lt;strong&gt;permission-discrepancy-finder&lt;/strong&gt;&lt;/a&gt; . You can use this tool to identiify conditions in your &lt;em&gt;project&lt;/em&gt; or &lt;em&gt;organization&lt;/em&gt; where an end user is using one of these PaaS Servcies without the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.actAs&lt;/code&gt; permission on the backing service account.&lt;/p&gt;

&lt;p&gt;Once you’ve identified &lt;strong&gt;who&lt;/strong&gt; needs the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.actAs&lt;/code&gt; permission, you can assign them the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;iam.serviceAccountUser&lt;/code&gt; role &lt;em&gt;on&lt;/em&gt; the service account. Binding the role at the resource-level will confine the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.actAs&lt;/code&gt; permission to that specific service account.&lt;/p&gt;

&lt;p&gt;Be mindful that when the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.actAs&lt;/code&gt; permission is assigned, you are effectively agreeing to the idea that one identity can assume the roles and permissions of another.  To reduce the blast radius of potential service account abuse,  assign unique customer-managed service accounts to the &lt;em&gt;compute instance&lt;/em&gt; backing your PaaS Services.&lt;/p&gt;

&lt;p&gt;Trim down the roles and permissions assigned to your service accounts.  While always good advice, it becomes even more important when another identity will be allowed to impersonate or use that service account.  Google did a good job of documenting the minimum roles required for running Dataflow, Dataproc and Data Fusion.  Any additional roles needed would be unique to your workflows.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;How did this happen&lt;/strong&gt; ?&lt;/p&gt;

&lt;p&gt;I’ve done my best to keep any color commentary out of the accounting of the vulnerability.
This next part is the highly editorizalied portion of the post and &lt;u&gt;should be considered a personal opinion piece.&lt;/u&gt;&lt;/p&gt;

&lt;p&gt;You may be asking yourself as I did, how could a technical powerhouse like Google coditfy a path for privilege escalation as an acceptble pattern? I have no doubt that this debacle wasn’t a bug or an egregious oversight but a conscious decision.&lt;/p&gt;

&lt;p&gt;In Dylan Ayrey’s &lt;a href=&quot;https://security.love/blog/gcp/2020/11/22/lateral-movement-and-privesc-in-GCP.html&quot;&gt;post&lt;/a&gt;, he asks the question ‘how did we get here’ and describes a scenario where the Google juggernaught may have yielded a disappointing result but ultimately operated correctly.&lt;br /&gt;
That is, the Product Managers for Cloud IAM and the data science PaaS products have engaged over the security issues but ultimately each product has chosen a path they feel is best suited for them. The result? Security issues manifested not as result of tech debt or a failed process but as a &lt;em&gt;byproduct&lt;/em&gt; of the process.&lt;/p&gt;

&lt;p&gt;I’ve found myself asking the question, how insular must an organization be to make such a miscalcuation of risk?&lt;/p&gt;

&lt;p&gt;Google’s notification to customers left me with even more questions. The tone of their announcement makes it seem as if the &lt;strong&gt;core security considerations&lt;/strong&gt; of their products are still lost on them.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;To make onboarding easier, the following services have used the Compute Engine default service account as the default and have relied on product-level IAM permissions without requiring the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;iam.serviceAccount.actAs&lt;/code&gt; permission:&lt;/p&gt;

  &lt;ul&gt;
    &lt;li&gt;Cloud Composer&lt;/li&gt;
    &lt;li&gt;Dataflow&lt;/li&gt;
    &lt;li&gt;Dataproc&lt;/li&gt;
    &lt;li&gt;Dataprep&lt;/li&gt;
    &lt;li&gt;Data Fusion&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Where was Google’s security department?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Given what we know, that this cavernous security flaw existed in GCP for years, I can only conclude that Security @ Google lacks the all important &lt;strong&gt;Oh Shit&lt;/strong&gt; button every security department needs.&lt;/p&gt;

&lt;p&gt;Whether this is by design or because their is a lack of trust, I have no inclanations, but it doesn’t leave me feeling optimistic for the idea that security is a core design principal in GCP.  Or, that when the rubber meets the road, Security @ Google can force different design decisions on behalf of securing their customers workloads.&lt;/p&gt;
</description>
				<pubDate>Fri, 01 Jan 2021 00:00:00 -0600</pubDate>
				<link>http://localhost:4000/gcp/iam/101/2021/01/01/gcp-actas-dday.html</link>
				<guid isPermaLink="true">http://localhost:4000/gcp/iam/101/2021/01/01/gcp-actas-dday.html</guid>
			</item>
			
		
			
			<item>
				<title>GCP Roles and Permissions 101</title>
				<description>&lt;p&gt;In GCP, access to resources is ultimately governed by Cloud IAM Permissions however, individual permissions are not directly assigned to principals. Instead, permissions are grouped together to create roles. These roles, rather than individual permissions, are then granted to principals in an IAM Policy.&lt;/p&gt;

&lt;p&gt;Roles can range from containing just a single permission to encompassing thousands of permissions, such as the coarse-grained &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Editor&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Owner&lt;/code&gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;[basic roles](https://cloud.google.com/iam/docs/understanding-roles#basic)&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id=&quot;permissions&quot;&gt;&lt;strong&gt;Permissions&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;Permissions are always described in the three-part format: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;[service].[resource].[action]&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Examples:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;resourcemanager.projects.setIamPolicy&lt;/code&gt;: This permission, associated with the Resource Manager service, enables principals to modify IAM policies attached at the project-level.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;iam.serviceAccounts.setIamPolicy&lt;/code&gt;: This permission, associated with the IAM service, grants principals the ability to modify IAM policies related solely to service accounts.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;spanner.databases.setIamPolicy&lt;/code&gt;: This permission, associated to the Spanner service, allows principals to modify IAM policies related exclusively to Spanner databases.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;While all these permissions pertain to updating IAM policies, they target different resources, impacting distinct scopes.&lt;/p&gt;

&lt;h3 id=&quot;roles&quot;&gt;&lt;strong&gt;Roles&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;Roles come in three flavors, Basic (née Primitive), Pre-Defined Roles and Custom Roles.&lt;/p&gt;

&lt;h5 id=&quot;basic-roles&quot;&gt;Basic Roles&lt;/h5&gt;

&lt;p&gt;Before Cloud IAM’s introduction in 2013, only &lt;a href=&quot;https://cloud.google.com/iam/docs/understanding-roles#basic&quot;&gt;Basic Roles&lt;/a&gt; were available for policy assignments. The three Basic Roles (Owner, Editor, and Viewer) are coarse-grained, Google-managed roles each containing thousands of permissions.&lt;/p&gt;

&lt;p&gt;These three Basic Roles form concentric circles of permissions, with Viewer containing a subset of Editor’s permissions, and Editor containing a subset of Owner’s permissions.&lt;/p&gt;

&lt;p&gt;Editor is widely used in GCP as the default role assigned to the Default Compute and Default App Engine Service Accounts. However, Google generally advises against using Basic Roles in most situations, a stance I support.&lt;/p&gt;

&lt;h5 id=&quot;pre-defined-roles&quot;&gt;Pre-Defined Roles&lt;/h5&gt;

&lt;p&gt;&lt;a href=&quot;https://cloud.google.com/iam/docs/understanding-roles#predefined&quot;&gt;Pre-defined Roles&lt;/a&gt; are sets of permissions curated and bundled as roles by Google. Updates to these roles are pushed weekly and can be tracked in the &lt;a href=&quot;https://cloud.google.com/iam/docs/permissions-change-log&quot;&gt;Cloud IAM Permissions Change Log&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Pre-defined Roles are designed to align with specific job functions and offer more granularity compared to Basic Roles.&lt;/p&gt;

&lt;h5 id=&quot;custom-roles&quot;&gt;Custom Roles&lt;/h5&gt;

&lt;p&gt;Finally, Google allows end users to create their own Custom Roles for GCP. &lt;a href=&quot;https://cloud.google.com/iam/docs/creating-custom-roles&quot;&gt;Custom Roles&lt;/a&gt; enable you to define unique collections of permissions, which can be crafted at the organization level and then assigned at various points in the hierarchy, or created within a project for use exclusively within that resource.&lt;/p&gt;

&lt;p&gt;It’s important to note that not all permissions can be used in Custom Roles, and some permissions may not be assignable at all resource levels. For more details, refer to the &lt;a href=&quot;https://cloud.google.com/iam/docs/custom-roles-permissions-support&quot;&gt;documentation&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;role-assignment-resource-levels&quot;&gt;Role Assignment Resource levels&lt;/h3&gt;

&lt;p&gt;In GCP, not all roles can be assigned at every resource level. Typically, every role has a lower boundary which it can be assigned.&lt;/p&gt;

&lt;p&gt;For example, the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cloudsql.admin&lt;/code&gt; role can be assigned at the Project Level, allowing a user to administer all SQL instances within that project. However, this role cannot be assigned to child resources of the project, such as individual SQL instances.&lt;/p&gt;

&lt;p&gt;When it comes to Basic Roles like Owner, Editor, and Viewer, there are both upper and lower boundaries for policy attachments. These roles can only be assigned at the Project-Level; they cannot be in an IAM policy and attached to a parent resource like the organization node, nor to child resources within the project.&lt;/p&gt;

&lt;p&gt;As a best practice, roles should be assigned at the lowest resource level possible to reduce the scope of the permissions.&lt;/p&gt;

</description>
				<pubDate>Fri, 25 Dec 2020 00:00:00 -0600</pubDate>
				<link>http://localhost:4000/gcp/iam/101/2020/12/25/gcp-roles-permissions-101.html</link>
				<guid isPermaLink="true">http://localhost:4000/gcp/iam/101/2020/12/25/gcp-roles-permissions-101.html</guid>
			</item>
			
		
			
			<item>
				<title>GCP Users and Group 101</title>
				<description>&lt;p&gt;&lt;strong&gt;Users and Groups&lt;/strong&gt; are two types of principals that can be granted access in GCP. When users and groups are members in IAM Policies, they are referenced by their Google email addresses.&lt;/p&gt;

&lt;p&gt;You won’t find a directory in Google Cloud listing users or groups. Instead, users and groups are managed within the Google Workspace directory (formerly GSuite) of your registered Google Domain. Alternatively, groups and group memberships can be managed using &lt;a href=&quot;https://cloud.google.com/identity/docs/reference/rest&quot;&gt;Cloud Identity&lt;/a&gt;, a service within Google Cloud.&lt;/p&gt;

&lt;p&gt;An inventory of the users and groups within your domain can be accessed through the Google Workspace &lt;a href=&quot;https://admin.google.com/ac/users&quot;&gt;Admin Console&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Defaults&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Cross-Organization Access Allowed&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;ANY&lt;/strong&gt; Google user or group in &lt;strong&gt;ANY&lt;/strong&gt; domain can be assigned IAM Roles in &lt;strong&gt;ANY&lt;/strong&gt; organization or project in any domain.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Example: The GCP Organization for the domain &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;test.com&lt;/code&gt; can have IAM Policy granting principals from &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;example.org&lt;/code&gt; access to their resources.&lt;/li&gt;
  &lt;li&gt;To limit &lt;strong&gt;WHO&lt;/strong&gt; can be a member in IAM Policy, employ the Organizational Policy Constraint &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;[constraints/iam.allowedPolicyMemberDomains](https://cloud.google.com/resource-manager/docs/organization-policy/restricting-domains)&lt;/code&gt; where by you can define an allowed list of approved domains.&lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
  &lt;li&gt;All Users can Create GCP Projects and Resources&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;By default, when GCP is enabled within Google Workspace, users have the ability to create projects and create a billing account. Consequently, creators of projects are automatically granted the powerful owner role for the projects they create.&lt;/p&gt;

&lt;p&gt;To manage this default behavior:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;First, create designated billing accounts and project creators.&lt;/li&gt;
  &lt;li&gt;Then, &lt;a href=&quot;https://cloud.google.com/resource-manager/docs/default-access-control#removing-default-roles&quot;&gt;manually remove&lt;/a&gt; the default roles (Project Creator and Billing Account Creator) from the organization node.&lt;/li&gt;
&lt;/ul&gt;

</description>
				<pubDate>Sat, 05 Dec 2020 00:00:00 -0600</pubDate>
				<link>http://localhost:4000/gcp/iam/101/2020/12/05/gcp-users-groups-101.html</link>
				<guid isPermaLink="true">http://localhost:4000/gcp/iam/101/2020/12/05/gcp-users-groups-101.html</guid>
			</item>
			
		
			
			<item>
				<title>GCP Service Account 101</title>
				<description>&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://cloud.google.com/iam/docs/overview#service_account&quot;&gt;Service Accounts&lt;/a&gt;&lt;/strong&gt; are identities used for authenticating infrastructure and resources, typically for non-human entities. Service Accounts do not utilize passwords. While you have the option to generate and export a private key for a service account, it’s generally unnecessary and can pose a &lt;a href=&quot;https://jryancanty.medium.com/stop-downloading-google-cloud-service-account-keys-1811d44a97d9&quot;&gt;security risk&lt;/a&gt; in most cases. The only valid scenario where generating and exporting a private key may be necessary is to enable external integrations in instances where &lt;a href=&quot;https://docs.github.com/en/actions/deployment/security-hardening-your-deployments/configuring-openid-connect-in-google-cloud-platform&quot;&gt;OIDC&lt;/a&gt; is not supported.&lt;/p&gt;

&lt;h2 id=&quot;service-accounts-as-resources&quot;&gt;Service Accounts as Resources&lt;/h2&gt;

&lt;p&gt;Service accounts are created within and associated with a specific project. &lt;em&gt;Think of a service account as having a ‘home’ project,&lt;/em&gt; similar to how a compute instance or a storage bucket ‘resides’ in a project within the resource hierarchy.&lt;/p&gt;

&lt;p&gt;Similar to other resources, you can use the &lt;em&gt;&lt;a href=&quot;https://cloud.google.com/iam/docs/reference/rest/v1/projects.serviceAccounts/setIamPolicy&quot;&gt;setIAMPolicy&lt;/a&gt;&lt;/em&gt; method to attach IAM policies to a service account. IAM policies for a service account typically include permissions such as:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;generate an OAuth or OIDC token for the service account (impersonate)
    &lt;ul&gt;
      &lt;li&gt;(.getAccessToken) (.getOpenIdToken)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;attach a service account to a resource.
    &lt;ul&gt;
      &lt;li&gt;(.actAs)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;generate keys for the service account.
    &lt;ul&gt;
      &lt;li&gt;(iam.serviceAccountKeys.create)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;manage the service account.
    &lt;ul&gt;
      &lt;li&gt;(.create) (.delete) (.setIamPolicy)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;service-accounts-as-identities&quot;&gt;Service Accounts as Identities**&lt;/h2&gt;

&lt;p&gt;In GCP, service accounts, like other identity types such as Users and Groups, can be included as members in IAM Policies and granted permissions at any level within the resource hierarchy. Service accounts are not restricted to receiving permissions only within their home project. Similar to users and groups, service accounts can have cross-project permissions or even have access to resources in other organizations.&lt;/p&gt;

&lt;h2 id=&quot;attaching-a-policy-to-a-service-account&quot;&gt;Attaching a Policy to a Service Account&lt;/h2&gt;

&lt;p&gt;When configuring IAM Policies for a Service Account, the entity granted permissions (the WHO) can be another Service Account. It can be advantageous to establish a pattern where a Service Account is granted permissions to impersonate another Service Account.&lt;/p&gt;

&lt;p&gt;In such scenarios, the Service Account performing the impersonation is the &lt;strong&gt;WHO&lt;/strong&gt;, functioning as an identity. Meanwhile, the Service Account being impersonated serves as the target resource.&lt;/p&gt;

</description>
				<pubDate>Tue, 01 Dec 2020 00:00:00 -0600</pubDate>
				<link>http://localhost:4000/gcp/iam/101/2020/12/01/gcp-service-accounts-101.html</link>
				<guid isPermaLink="true">http://localhost:4000/gcp/iam/101/2020/12/01/gcp-service-accounts-101.html</guid>
			</item>
			
		
			
			<item>
				<title>GCP Resource Hierarchy 101</title>
				<description>&lt;p&gt;Google Cloud is organized into a hierarchy with each level or node of this structure being a resource.  At the top of the hierarchy is the &lt;strong&gt;Organization&lt;/strong&gt; followed by any number of nested &lt;strong&gt;Folders&lt;/strong&gt; which then house &lt;strong&gt;Projects&lt;/strong&gt;. At the lowest level of the hierarchy are the widgets the compose a GCP Project. Resources including Pub/Sub topics, Cloud Compute instances, Cloud Buckets or Services Accounts are all child resources of projects.&lt;/p&gt;

&lt;p&gt;Whether the resource is a Project, a Folder or a Key Ring, each resource has exactly one parent.&lt;/p&gt;

&lt;p&gt;There are two characteristics of a GCP resource hierarchy to consider when creating a resource hierarchy.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Resource Ownership for Lifecycle management:  Deleting a project deletes all resources contained within the project. If a Folder is deleted, all Folders or Projects that inherit from it are deleted.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Policy Inheritance: Resources function as attachment points for both IAM Policies and Organizational Policy Constraints. IAM Policies can be attached at any level within the hierarchy. The hierarchical structure of resources (with its child/parent relationships) determines how IAM Policy inheritance impacts the scope of access control. An IAM policy affects both the resource to which it’s attached and all of its child resources.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

</description>
				<pubDate>Tue, 01 Dec 2020 00:00:00 -0600</pubDate>
				<link>http://localhost:4000/gcp/iam/101/2020/12/01/gcp-resource-hierarchy-101.html</link>
				<guid isPermaLink="true">http://localhost:4000/gcp/iam/101/2020/12/01/gcp-resource-hierarchy-101.html</guid>
			</item>
			
		
			
			<item>
				<title>GCP IAM Policy 101</title>
				<description>&lt;p&gt;The GCP model for managing access to resources has three main parts: &lt;strong&gt;Who, What Role and the Resource.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In Google Cloud Platform (GCP), permissions are granted by combining the &lt;strong&gt;WHO&lt;/strong&gt; (identity) and the &lt;strong&gt;WHAT&lt;/strong&gt; (action) to form a policy. This policy is then applied, or ‘Bound’, to a specific Resource. By doing so, permissions are granted and a scope is created.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://cloud.google.com/iam/docs/overview#concepts_related_identity&quot;&gt;Who&lt;/a&gt;&lt;/strong&gt;: Users and groups live and are managed in either Google Workspace (formerly GSuite) or Cloud Identity, while Service Accounts and the Identity Namespace live as resources in the Google Cloud Platform. A valid member can also be a Cloud Identity domain or special group such as ‘AllUsers’ or ‘AllAuthenticatedUsers’.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://cloud.google.com/iam/docs/overview#roles&quot;&gt;Role&lt;/a&gt;&lt;/strong&gt;: A role is a collection of permissions. Permissions determine what actions you can take on a resource. When a role is assigned to a member, you grant all the permissions contained in that role.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://cloud.google.com/iam/docs/overview#resource-hierarchy&quot;&gt;Resource&lt;/a&gt;&lt;/strong&gt;: 
In GCP’s resource hierarchy, each level — be it the top-level organization node, folder, or project node — is a resource capable of having an IAM policy attached. This applies not only to the organization/folder/project structure but also to all child resources of projects.&lt;br /&gt;
Permissions are granted to a principal only when a policy is attached/bound to a resource and are inherited to all downstream child resources.&lt;/p&gt;
</description>
				<pubDate>Tue, 01 Dec 2020 00:00:00 -0600</pubDate>
				<link>http://localhost:4000/gcp/iam/101/2020/12/01/gcp-iam-policy-101.html</link>
				<guid isPermaLink="true">http://localhost:4000/gcp/iam/101/2020/12/01/gcp-iam-policy-101.html</guid>
			</item>
			
		
	</channel>
</rss>